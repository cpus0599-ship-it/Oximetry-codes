import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('100002-1487006909985-0-1487006910227.csv')

if 'SpO2' not in df.columns:
df['SpO2'] = np.arange(len(df))

df = df[ df['Green'] > 70 ]

X = df[['SpO2']]
y = df['Green']

model = LinearRegression()
model.fit(X, y)

print("Intercept:", model.intercept_)
print("Coefficients:", model.coef_)

y_pred = model.predict(X)

r2 = r2_score(y, y_pred)
n = len(y)
p = X.shape[1]
adj_r2 = 1 - (1 - r2) * (n - 1) / (n - p - 1)
rmse = np.sqrt(mean_squared_error(y, y_pred))
mae = mean_absolute_error(y, y_pred)

print("R²:", r2)
print("Adjusted R²:", adj_r2)
print("RMSE:", rmse)
print("MAE:", mae)
residuals = y - y_pred

plt.figure(figsize=(12,5))
plt.subplot(1,2,1)
plt.scatter(y_pred, residuals)
plt.axhline(y=0, color='r', linestyle='--')
plt.xlabel('Predicted values')
plt.ylabel('Residuals')
plt.title('Residuals vs Predicted')

plt.subplot(1,2,2)
import statsmodels.api as sm
sm.qqplot(residuals, line='45', ax=plt.gca())
plt.title('Q-Q Plot of residuals')

plt.tight_layout()
