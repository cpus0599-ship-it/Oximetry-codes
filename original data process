import cv2
import numpy as np
from pathlib import Path
import matplotlib.pyplot as plt

DESKTOP = Path.home() / "Desktop"
IN_DIR = DESKTOP
OUT_DIR = DESKTOP / "ppg_output_simple"
OUT_DIR.mkdir(parents=True, exist_ok=True)

VIDEO_EXTS = (".mp4", ".avi", ".mov", ".mkv")

def read_video_rgb_means(video_path):
cap = cv2.VideoCapture(str(video_path))
if not cap.isOpened():
print(f"[Skip] Cannot open video: {video_path}")
return [], [], [], []

frame_idx = 0
frames = []
rs, gs, bs = [], [], []

while True:
ok, frame = cap.read()
if not ok:
break
b, g, r = cv2.split(frame)
rs.append(float(np.mean(r)))
gs.append(float(np.mean(g)))
bs.append(float(np.mean(b)))
frames.append(frame_idx)
frame_idx += 1

cap.release()
return frames, rs, gs, bs

def save_csv(video_name, frames, rs, gs, bs):
arr = np.column_stack([frames, rs, gs, bs]).astype(np.float32)
out_csv = OUT_DIR / f"{video_name}_rgb_means.csv"
header = "frame,R_mean,G_mean,B_mean"
np.savetxt(out_csv, arr, delimiter=",", header=header, comments="", fmt="%.6f")
print(f"[Saved] CSV: {out_csv}")

def plot_rgb(video_name, frames, rs, gs, bs, show_plot=False):
if len(frames) == 0:
return
plt.figure()
plt.plot(frames, rs, label="R")
plt.plot(frames, gs, label="G")
plt.plot(frames, bs, label="B")
plt.title(f"RGB Means - {video_name}")
plt.xlabel(" ")
plt.ylabel("SpO2")
plt.legend()
out_png = OUT_DIR / f"{video_name}_rgb_plot.png"
plt.savefig(out_png, dpi=150, bbox_inches="tight")
if show_plot:
plt.show()
plt.close()
print(f"[Saved] PNG: {out_png}")

def process_all_videos(folder=IN_DIR):
video_files = [p for p in Path(folder).iterdir() if p.suffix.lower() in VIDEO_EXTS]
if len(video_files) == 0:
print("[Info] No video files found on Desktop")
return

print(f"[Found] {len(video_files)} video file(s)")
for vp in video_files:
video_name = vp.stem
print("=" * 50)
print(f"[Process] {video_name}")
frames, rs, gs, bs = read_video_rgb_means(vp)

if len(frames) == 0:
print("[Skip] No frames read")
continue
save_csv(video_name, frames, rs, gs, bs)
plot_rgb(video_name, frames, rs, gs, bs, show_plot=False)

if __name__ == "__main__":
print("=== Video RGB Extractor ===")
print(f"Input folder: {IN_DIR}")
print(f"Output folder: {OUT_DIR}")
process_all_videos(IN_DIR)
print("Done.")
